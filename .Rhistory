y="Consumo de Combustível",
x="Cavalos de Potência",
title="Scatterplot",
caption = "Data Base")
print(g, format = center)
getwd()
#download.file("http://apps.who.int/gho/athena/data/GHO/WHOSIS_000008.csv?profile=text&filter=COUNTRY:*;SEX:*","hunger.csv",method="curl")
hunger <- read.csv('hunger/hunger.csv')
#download.file("http://apps.who.int/gho/athena/data/GHO/WHOSIS_000008.csv?profile=text&filter=COUNTRY:*;SEX:*","hunger.csv",method="curl")
hunger <- read.csv('sheets/hunger.csv')
hunger <- hunger[hunger$Sex!="Both sexes",]
head(hunger)
lm1 <- lm(hunger$Numeric ~ hunger$Year)
plot(hunger$Year,hunger$Numeric,pch=19,col="blue")
g <- ggplot(mtcars, aes(y = mpg, x = hp)) +
geom_point(col = 'blue')+
geom_smooth(method= "lm")+
labs(subtitle="Consumo de Combustível",
y="Consumo de Combustível",
x="Cavalos de Potência",
title="Scatterplot",
caption = "Data Base")
print(g, format = justify)
lm1 <- lm(hunger$Numeric ~ hunger$Year)
plot1 <- plot(hunger$Year,hunger$Numeric,pch=19,col="blue")
plot1 <- plot(hunger$Year,hunger$Numeric,pch=19,col="blue")
print(plot1)
lm1 <- lm(hunger$Numeric ~ hunger$Year)
plot1 <- plot(hunger$Year,hunger$Numeric,pch=19,col="blue")
print(plot1)
plot1 <- plot(hunger$Year,hunger$Numeric,pch=19,col="blue")
plot1 <- plot(hunger$Year,hunger$Numeric,pch=19,col="blue")
library(knitr)
simb <- data.frame(Simbolo = c('A', 'B', 'C'), Descrição = c('Descrição A', 'Descrição B', 'Descrição C'))
simb <- kable(simb, align = 'l', )
print(simb, justify)
a <- summary(mtcars)
print(a)
print(a$mpg)
library(datasets); data(swiss); require(stats); require(graphics)
pairs(swiss, panel = panel.smooth, main = "Swiss data",
col = 3 + (swiss$Catholic > 50))
pairs <- pairs(swiss, panel = panel.smooth, main = "Swiss data",
col = 3 + (swiss$Catholic > 50))
print(pairs)
pairs(swiss, panel = panel.smooth, main = "Swiss data",
col = 3 + (swiss$Catholic > 50))
summary(lm(Fertility ~ . , data = swiss))$coefficients
summary(lm(Fertility ~ Agriculture, data = swiss))$coefficients
summary(lm(y ~ x1 + x2))$coef
n <- 100; x2 <- 1 : n; x1 <- .01 * x2 + runif(n, -.1, .1);
y = -x1 + x2 + rnorm(n, sd = .01)
summary(lm(y ~ x1))$coef
summary(lm(y ~ x1 + x2))$coef
par(mfrow = c(1, 2))
plot(x1, y, pch=21,col="black",bg=topo.colors(n)[x2], frame = FALSE, cex = 1.5)
title('Unadjusted, color is X2')
abline(lm(y ~ x1), lwd = 2)
plot(resid(lm(x1 ~ x2)), resid(lm(y ~ x2)), pch = 21, col = "black", bg = "lightblue", frame = FALSE, cex = 1.5)
title('Adjusted')
abline(lm(y ~ x1), lwd = 2)
plot(x1, y, pch=21,col="black",bg=topo.colors(n)[x2], frame = FALSE, cex = 1.5)
#abline(lm(y ~ x1), lwd = 2)
#plot(resid(lm(x1 ~ x2)), resid(lm(y ~ x2)), pch = 21, col = "black", bg = "lightblue", frame = FALSE, cex = 1.5)
#title('Adjusted')
abline(0, coef(lm(y ~ x1 + x2))[2], lwd = 2)
#abline(lm(y ~ x1), lwd = 2)
#plot(resid(lm(x1 ~ x2)), resid(lm(y ~ x2)), pch = 21, col = "black", bg = "lightblue", frame = FALSE, cex = 1.5)
title('Adjusted')
par(mfrow = c(1, 2))
plot(x1, y, pch=21,col="black",bg=topo.colors(n)[x2], frame = FALSE, cex = 1.5)
title('Unadjusted, color is X2')
#abline(lm(y ~ x1), lwd = 2)
#plot(resid(lm(x1 ~ x2)), resid(lm(y ~ x2)), pch = 21, col = "black", bg = "lightblue", frame = FALSE, cex = 1.5)
title('Adjusted')
par(mfrow = c(1, 2))
plot(x1, y, pch=21,col="black",bg=topo.colors(n)[x2], frame = FALSE, cex = 1.5)
title('Unadjusted, color is X2')
plot(x1, y, pch=21,col="black",bg=topo.colors(n)[x2], frame = FALSE, cex = 1.5)
par(mfrow = c(1, 2))
plot(x1, y, pch=21,col="black",bg=topo.colors(n)[x2], frame = FALSE, cex = 1.5)
simb <- data.frame(Simbolo = c('A', 'B', 'C'), Descrição = c('Descrição A', 'Descrição B', 'Descrição C'))
simb <- kable(simb, align = 'l', )
print(simb, justify)
brary(bookdown)
library(bookdown)
library(bookdown)
library(latex2exp)
library(latexpdf)
library(knitLatex)
library(knitr)
library(tinytex)
library(utf8)
library(ggplot2)
library(knitr)
simb <- data.frame(Simbolo = c('A', 'B', 'C'), Descrição = c('Descrição A', 'Descrição B', 'Descrição C'))
simb <- kable(simb, align = 'l', )
print(simb, justify)
vector <- c(2,4,6,8,10)
mean.vector <- mean(vector)
cat('A média do vetor é:', mean.vector)
summary(mtcars)
summary(mtcars)[1]
summary(mtcars)[5]
summary(mtcars)[10]
str(mtcars)
g <- ggplot(mtcars, aes(y = mpg, x = hp)) +
geom_point(col = 'blue')+
geom_smooth(method= "lm")+
labs(subtitle="Consumo de Combustível",
y="Consumo de Combustível",
x="Cavalos de Potência",
title="Scatterplot",
caption = "Data Base")
print(g, format = justify)
summary(lm(Fertility ~ . , data = swiss))$coefficients
summary(lm(Fertility ~ Agriculture, data = swiss))$coefficients
summary(mtcars)$coefficients
summary(mtcars)$coefficients
summary(lm(formula = mpg ~ ., data = mtcars))$coefficients
summary(lm(formula = mpg ~ ., data = mtcars))$coefficients
spray2 <- relevel(InsectSprays$spray, "C")
summary(lm(count ~ spray2, data = InsectSprays))$coef
fit <- lm(count ~ spray, data = InsectSprays) #A is ref
bbmbc <- coef(fit)[2] - coef(fit)[3] #B - C
temp <- summary(fit)
se <- temp$sigma * sqrt(temp$cov.unscaled[2, 2] + temp$cov.unscaled[3,3] - 2 *temp$cov.unscaled[2,3])
t <- (bbmbc) / se
p <- pt(-abs(t), df = fit$df)
out <- c(bbmbc, se, t, p)
names(out) <- c("B - C", "SE", "T", "P")
round(out, 3)
#download.file("http://apps.who.int/gho/athena/data/GHO/WHOSIS_000008.csv?profile=text&filter=COUNTRY:*;SEX:*","hunger.csv",method="curl")
hunger <- read.csv('01-data/sheets/hunger.csv')
hunger <- hunger[hunger$Sex!="Both sexes",]
head(hunger)
lm(Fertility ~ . + z, data = swiss)
z <- swiss$Agriculture + swiss$Education
lm(Fertility ~ . + z, data = swiss)
lm(Fertility ~ . + z, data = swiss)$Agriculture
lm(Fertility ~ . + z, data = swiss)[1]
kable(head(hunger))
kable(head(hunger[,1]))
kable(head(hunger[,-2]))
kable(head(hunger))
kable(head(hunger),3)
kable(head(hunger,3))
lm1 <- lm(hunger$Numeric ~ hunger$Year)
plot1 <- plot(hunger$Year,hunger$Numeric,pch=19,col="blue")
print(plot1)
plot1 <- plot(hunger$Year,hunger$Numeric,pch=19,col="blue")
plotg <- plot(hunger$Year,hunger$Numeric,pch=19,col="blue")
plot(hunger$Year,hunger$Numeric,pch=19,col="blue")
```{r, dependson="whoDataLoad",fig.height=4,fig.width=4, fig.align='center'}
lm1 <- lm(hunger$Numeric ~ hunger$Year)
plot(hunger$Year,hunger$Numeric,pch=19,col="blue")
lmM <- lm(hunger$Numeric[hunger$Sex=="Male"] ~ hunger$Year[hunger$Sex=="Male"])
lmF <- lm(hunger$Numeric[hunger$Sex=="Female"] ~ hunger$Year[hunger$Sex=="Female"])
plot(hunger$Year,hunger$Numeric,pch=19)
points(hunger$Year,hunger$Numeric,pch=19,col=((hunger$Sex=="Male")*1+1))
lines(hunger$Year[hunger$Sex=="Male"],lmM$fitted,col="black",lwd=3)
lines(hunger$Year[hunger$Sex=="Female"],lmF$fitted,col="red",lwd=3)
lmM <- lm(hunger$Numeric[hunger$Sex=="Male"] ~ hunger$Year[hunger$Sex=="Male"])
lmF <- lm(hunger$Numeric[hunger$Sex=="Female"] ~ hunger$Year[hunger$Sex=="Female"])
plot(hunger$Year,hunger$Numeric,pch=19)
points(hunger$Year,hunger$Numeric,pch=19,col=((hunger$Sex=="Male")*1+1))
lmM <- lm(hunger$Numeric[hunger$Sex=="Male"] ~ hunger$Year[hunger$Sex=="Male"])
lmF <- lm(hunger$Numeric[hunger$Sex=="Female"] ~ hunger$Year[hunger$Sex=="Female"])
plot(hunger$Year,hunger$Numeric,pch=19)
lmBoth <- lm(hunger$Numeric ~ hunger$Year + hunger$Sex)
plot(hunger$Year,hunger$Numeric,pch=19)
points(hunger$Year,hunger$Numeric,pch=19,col=((hunger$Sex=="Male")*1+1))
lmBoth <- lm(hunger$Numeric ~ hunger$Year + hunger$Sex)
plot(hunger$Year,hunger$Numeric,pch=19)
lmBoth <- lm(hunger$Numeric ~ hunger$Year + hunger$Sex + hunger$Sex*hunger$Year)
plot(hunger$Year,hunger$Numeric,pch=19)
summary(lmBoth)
summary(lmBoth)$Residuals
summary(lmBoth)[1]
summary(lmBoth)[2]
summary(lmBoth)[3]
summary(lmBoth)[4]
kable(head(hunger[,1:2],3))
summary(lm(Fertility ~ . , data = swiss))$coefficients[,1:2]
lm(Fertility ~ . + z, data = swiss)[,1:2]
lm(Fertility ~ . + z, data = swiss)[1]
summary(lm(count ~
I(1 * (spray == 'B')) + I(1 * (spray == 'C')) +
I(1 * (spray == 'D')) + I(1 * (spray == 'E')) +
I(1 * (spray == 'F'))
, data = InsectSprays))$coef
lm(count ~
I(1 * (spray == 'B')) + I(1 * (spray == 'C')) +
I(1 * (spray == 'D')) + I(1 * (spray == 'E')) +
I(1 * (spray == 'F')) + I(1 * (spray == 'A')), data = InsectSprays)
lm(count ~
I(1 * (spray == 'B')) + I(1 * (spray == 'C')) +
I(1 * (spray == 'D')) + I(1 * (spray == 'E')) +
I(1 * (spray == 'F')) + I(1 * (spray == 'A')), data = InsectSprays)[1]
url <- "http://apps.who.int/gho/athena/data/GHO/WHOSIS_000008.csv?profile=text&filter=COUNTRY:*;SEX:*","hunger.csv",method="curl"
url <- "http://apps.who.int/gho/athena/data/GHO/WHOSIS_000008.csv?profile=text&filter=COUNTRY:*;SEX:*","hunger.csv"
url <- "http://apps.who.int/gho/athena/data/GHO/WHOSIS_000008.csv?profile=text&filter=COUNTRY:*;SEX:*"
lm1 <- lm(hunger$Numeric ~ hunger$Year)
plot(hunger$Year,hunger$Numeric,pch=19,col="blue")
lm1 <- lm(hunger$Numeric ~ hunger$Year)
plot(hunger$Year,hunger$Numeric,pch=19,col="blue")
plot(hunger$Year,hunger$Numeric,pch=19)
points(hunger$Year,hunger$Numeric,pch=19,
col=((hunger$Sex=="Male")*1+1))
lmM <- lm(hunger$Numeric[hunger$Sex=="Male"] ~
hunger$Year[hunger$Sex=="Male"])
lmF <- lm(hunger$Numeric[hunger$Sex=="Female"] ~ hunger$Year[hunger$Sex=="Female"])
plot(hunger$Year,hunger$Numeric,pch=19)
points(hunger$Year,hunger$Numeric,pch=19,col=((hunger$Sex=="Male")*1+1))
lmM <- lm(hunger$Numeric[hunger$Sex=="Male"] ~
hunger$Year[hunger$Sex=="Male"])
lmF <- lm(hunger$Numeric[hunger$Sex=="Female"] ~ hunger$Year[hunger$Sex=="Female"])
lines(hunger$Year[hunger$Sex=="Male"],lmM$fitted,col="black",lwd=3)
lines(hunger$Year[hunger$Sex=="Female"],lmF$fitted,col="red",lwd=3)
plot(hunger$Year,hunger$Numeric,pch=19)
plot(hunger$Year,hunger$Numeric,pch=19)
points(hunger$Year,hunger$Numeric,pch=19,
col=((hunger$Sex=="Male")*1+1))
points(hunger$Year,hunger$Numeric,pch=19,
col=((hunger$Sex=="Male")*1+1))
plot(hunger$Year,hunger$Numeric,pch=19)
plot(hunger$Year,hunger$Numeric,pch=19)
lm(Fertility ~ . + z, data = swiss)[,1:2]
lm(Fertility ~ . + z, data = swiss)[[1]]
lm(Fertility ~ . + z, data = swiss)[[1]][1]
lm(Fertility ~ . + z, data = swiss)[[1]][1:2]
lm(Fertility ~ . + z, data = swiss)[[1]][1:2:3]
lm(Fertility ~ . + z, data = swiss)[[1]][1:3]
graf <- plot(hunger$Year,hunger$Numeric,pch=19)
print(graf)
lmM <- lm(hunger$Numeric[hunger$Sex=="Male"] ~
hunger$Year[hunger$Sex=="Male"])
lmF <- lm(hunger$Numeric[hunger$Sex=="Female"] ~
hunger$Year[hunger$Sex=="Female"])
graf <- plot(hunger$Year,hunger$Numeric,pch=19)
print(graf)
graf = plot(hunger$Year,hunger$Numeric,pch=19)
print(graf)
plot(hunger$Year,hunger$Numeric,pch=19)
pairs(swiss, panel = panel.smooth, main = "Swiss data",
col = 3 + (swiss$Catholic > 50))
print(pairs(swiss, panel = panel.smooth, main = "Swiss data",
col = 3 + (swiss$Catholic > 50)))
require(datasets);data(InsectSprays)
require(stats); require(graphics)
boxplot(count ~ spray, data = InsectSprays,
xlab = "Type of spray", ylab = "Insect count",
main = "InsectSprays data", varwidth = TRUE, col = "lightgray")
print(boxplot(count ~ spray, data = InsectSprays,
xlab = "Type of spray", ylab = "Insect count",
main = "InsectSprays data", varwidth = TRUE, col = "lightgray"))
print(plot(hunger$Year,hunger$Numeric,pch=19,col="blue"))
plot(hunger$Year,hunger$Numeric,pch=19,col="blue")
lines(hunger$Year,lm1$fitted,lwd=3,col="darkgrey")
print(plot(hunger$Year,hunger$Numeric,pch=19,col="blue"))
print(plot(hunger$Year,hunger$Numeric,pch=19))
print(plot(hunger$Year,hunger$Numeric,pch=19))
print(plot(hunger$Year,hunger$Numeric,pch=19))
print(plot(hunger$Year,hunger$Numeric,pch=19))
print(plot(hunger$Year,hunger$Numeric,pch=19))
lmBoth <- lm(hunger$Numeric ~ hunger$Year + hunger$Sex +
hunger$Sex*hunger$Year)
print(plot(hunger$Year,hunger$Numeric,pch=19))
ggplot( data = mtcars) +
geom_point(mapping = aes(x = disp, y = mpg, color = as.factor(am))) +
labs(x = "Cilindadas", y = "Milhas/galão")
ggplot( data = mtcars) +
geom_point(mapping = aes(x = disp,
y = mpg,
color = cyl)) +
labs(x = "Cilindadas", y = "Milhas/galão")
ggplot(mtcars,
aes(y = mpg,
x = disp)) +
geom_point(color = 'red') +
labs(x = 'Cilindradas',
y = 'Milhas / Galão')
ggplot(mtcars, aes(y = mpg, x = disp)) +
geom_point(colour = 'red', size = 2, shape = 3, alpha = 0.5) +
labs(x = 'Cilindradas', y = 'Milhas / Galão ' )
ggplot(mtcars) +
geom_boxplot(aes(x = as.factor(cyl), y= mpg))+
labs(x = "Time", y = 'Galão por milha')
ggplot(mtcars) +
geom_histogram(aes(x = mpg))
ggplot(mtcars)+
geom_bar(aes(x = as.factor(cyl)))
ggplot(mtcars)+
geom_point(aes(y = mpg, x = disp)) +
geom_smooth(aes(y = mpg, x = disp))
ggplot(mtcars, aes(y = mpg, x = disp)) +
geom_point() +
geom_smooth() +
labs(x = 'Cilindradas', y = "Galão por milha")
ggplot(mtcars, aes(y = mpg, x = disp, colour = as.factor(cyl))) +
geom_point() +
geom_smooth(method = "lm")
ggplot(mtcars, aes(y = mpg, x = disp)) +
geom_point(aes(colour = as.factor(cyl)))+
geom_smooth(method = 'lm') +
labs(x = 'Cilindradas', y = 'Galão por milhas')
ggplot(mtcars, aes(y = mpg, x = disp)) +
geom_point() +
geom_smooth(method = 'lm') +
facet_wrap(~am)
? facet_grid
bp <- ggplot(data = PlantGrowth, aes(x = group, y = weight, fill = group)) +
geom_boxplot() +
labs(x = 'Grupo', y = 'Peso')
bp
bp + guides(fill = FALSE)
bp + scale_fill_discrete(guide = F)
bp + theme(legend.position = 'none')
bp + scale_fill_discrete(breaks = c('trt1', 'ctrl', 'trt2'))
bp +
scale_fill_manual(values = c('#999999','#e69f00','#56B4E9'),
name = 'Experimental\nCondition',
breaks = c('ctrl','trt1','trt2'),
labels = c('Control', 'Treatment 1','Treatment 2'))
bp +
theme(legend.title = element_text(color = 'red', size = 12, face = 'bold')) +
theme(legend.text = element_text(colour = 'red', size = 12, face = "bold")) +
theme(legend.position = 'top')
bp <- ggplot(data = PlantGrowth, aes(x = group, y = weight, fill = group)) +
geom_boxplot() +
labs(x = 'Grupo', y = 'Peso')
bp
bp + guides(fill = FALSE)
bp + scale_fill_discrete(guide = F)
bp + theme(legend.position = 'none')
bp + scale_fill_discrete(breaks = c('trt1', 'ctrl', 'trt2'))
bp +
scale_fill_manual(values = c('#999999','#e69f00','#56B4E9'),
name = 'Experimental\nCondition',
breaks = c('ctrl','trt1','trt2'),
labels = c('Control', 'Treatment 1','Treatment 2'))
bp +
theme(legend.title = element_text(color = 'red', size = 12, face = 'bold')) +
theme(legend.text = element_text(colour = 'red', size = 12, face = "bold")) +
theme(legend.position = 'top')
ggplot(mtcars, aes(y = mpg, x = disp)) +
geom_point() +
geom_smooth(method = 'lm') +
facet_wrap(~am)
ggplot(mtcars, aes(y = mpg, x = disp)) +
geom_point() +
geom_smooth(method = 'lm') +
facet_wrap(~am)
ggplot(mtcars, aes(y = mpg, x = disp)) +
geom_point() +
geom_smooth(method = 'lm') +
facet_wrap(~am)
print(ggplot(mtcars, aes(y = mpg, x = disp)) +
geom_point() +
geom_smooth(method = 'lm') +
facet_wrap(~am))
ggplot(mtcars, aes(y = mpg, x = disp)) +
geom_point() +
geom_smooth() +
labs(x = 'Cilindradas', y = "Galão por milha")
#url <- "http://apps.who.int/gho/athena/data/GHO/WHOSIS_000008.csv?profile=text&filter=COUNTRY:*;SEX:*"
#download.file(url, "hunger.csv", method="curl")
hunger <- read.csv('01-data/sheets/hunger.csv')
hunger <- hunger[hunger$Sex!="Both sexes",]
kable(head(hunger[,1:2],3))
ggplot( data = mtcars) +
geom_point(mapping = aes(x = disp, y = mpg, color = as.factor(am))) +
labs(x = "Cilindadas", y = "Milhas/galão")
ggplot( data = mtcars) +
geom_point(mapping = aes(x = disp, y = mpg, color = as.factor(am))) +
labs(x = "Cilindadas", y = "Milhas/galão")
ggplot( data = mtcars) +
geom_point(mapping = aes(x = disp, y = mpg, color = as.factor(am))) +
labs(x = "Cilindadas", y = "Milhas/galão")
ggplot(mtcars,
aes(y = mpg,
x = disp)) +
geom_point(color = 'red') +
labs(x = 'Cilindradas',
y = 'Milhas / Galão')
ggplot(mtcars,
aes(y = mpg,
x = disp)) +
geom_point(color = 'red') +
labs(x = 'Cilindradas',
y = 'Milhas / Galão')
ggplot(mtcars,
aes(y = mpg,
x = disp)) +
geom_point(color = 'red') +
labs(x = 'Cilindradas',
y = 'Milhas / Galão')
ggplot(mtcars, aes(y = mpg, x = disp)) +
geom_point() +
geom_smooth(method = 'lm') +
facet_wrap(~am)
ggplot(mtcars, aes(y = mpg, x = disp)) +
geom_point() +
geom_smooth(method = 'lm') +
facet_wrap(~am)
ggplot(mtcars, aes(y = mpg, x = disp)) +
geom_point() +
geom_smooth(method = 'lm') +
facet_wrap(~am)
ggplot(mtcars, aes(y = mpg, x = disp)) +
geom_point(aes(colour = as.factor(cyl)))+
geom_smooth(method = 'lm') +
labs(x = 'Cilindradas', y = 'Galão por milhas')
ggplot(mtcars, aes(y = mpg, x = disp)) +
geom_point(aes(colour = as.factor(cyl)))+
geom_smooth(method = 'lm') +
labs(x = 'Cilindradas', y = 'Galão por milhas')
ggplot(mtcars, aes(y = mpg, x = disp)) +
geom_point(aes(colour = as.factor(cyl)))+
geom_smooth(method = 'lm') +
labs(x = 'Cilindradas', y = 'Galão por milhas')
sresid <- studres(fit)
hist(sresid,
freq = F,
main = 'Distribution of Studentized Residuals',
lines(xm, ym))
variables <- names(iris)
variables
explain <- str_c(variables[-1], collapse = ' + ')
explain
variables <- names(iris)
variables
explain <- str_c(variables[-1], collapse = ' + ')
library(dplyr)
explain <- str_c(variables[-1], collapse = ' + ')
library(tidyverse)
explain <- str_c(variables[-1], collapse = ' + ')
correl <- cor(iris[,-5])
corrplot(correl)
library(corrplot)
corrplot(correl)
variables <- names(iris)
explain <- str_c(variables[-1], collapse = ' + ')
formula <- str_c(variables[1],' ~ ',explain)
fit <- lm(formula, data = iris)
correl <- cor(iris[,-5])
corrplot(correl)
qqPlot(fit, data(iris), distribution = 'norm', subset(index(fit)))
xm <- seq(min(sresid), max(sresid), length = 80)
ym <- dnorm(xm)
sresid <- studres(fit)
hist(sresid,
freq = F,
main = 'Distribution of Studentized Residuals',
lines(xm, ym))
sresid <- studres(fit)
bodyfat <- read_excel("/Volumes/NOSKAJ/Dropbox/07 PESQUISAS/R/DATA TRAINING/BodyFat.xls")
set.seed(7)
dados <- data_frame(
x = runif(10),
y = 2*x + rnorm(10,0,0.1)
)
ggplot(dados, aes(x = x, y = y)) + geom_point()
modelo <- lm(y ~x, data = dados)
ggplot(dados, aes(x = x, y = y)) +
geom_point() +
geom_smooth(formula = y ~ x, colour = "red", se = FALSE, method = 'lm') +
geom_smooth(formula = y ~ poly(x, 9), se = FALSE, method = 'lm')
erro_modelo1 <- mean((dados$y - predict(modelo, newdata = dados))^2)
erro_modelo2 <- mean((dados$y - predict(modelo2, newdata = dados))^2)
round(erro_modelo1, digits = 3)
round(erro_modelo2, digits = 3)
dados2 <- data_frame(
x = runif(100),
y = 2 * x + rnorm(100,0,0.1)
)
ggplot(dados2, aes(x = x,y = y)) +
geom_point() +
geom_smooth(data = dados, formula = y ~ x, colours = 'red', se = FALSE, method = 'lm') +
geom_smooth(data = dados, formula = y ~ poly(x, 9), se = FALSE, method = 'lm')
set.seed(7)
dados <- data_frame(
x = runif(10),
y = 2*x + rnorm(10,0,0.1)
)
ggplot(dados, aes(x = x, y = y)) + geom_point()
ggplot(dados, aes(x = x, y = y)) +
geom_point() +
geom_smooth(formula = y ~ x, colour = "red", se = FALSE, method = 'lm') +
geom_smooth(formula = y ~ poly(x, 9), se = FALSE, method = 'lm')
modelo <- lm(y ~x, data = dados)
ggplot(dados, aes(x = x, y = y)) +
geom_point() +
geom_smooth(formula = y ~ x, colour = "red", se = FALSE, method = 'lm') +
geom_smooth(formula = y ~ poly(x, 9), se = FALSE, method = 'lm')
```{r, echo=FALSE, message=FALSE, results='asis', fig.height= 5, fig.width= 5, fig.align='center'}
library(ggplot2)
g <- ggplot(mtcars, aes(y = mpg, x = hp)) +
geom_point(col = 'blue')+
geom_smooth(method= "lm")+
labs(subtitle="Consumo de Combustível",
y="Consumo de Combustível",
x="Cavalos de Potência",
title="Scatterplot",
caption = "Data Base")
print(g, format = justify)
print(bp)
print(bp)
print(simb, justify)
library(datasets); data(swiss); require(stats); require(graphics)
pairs(swiss, panel = panel.smooth, main = "Swiss data",
col = 3 + (swiss$Catholic > 50))
